terr <- terr_daily[which(terr_daily$site_id == "BLAN"), ]
terr_daily_n <- nrow(terr)
rm(terr_daily_n)
# just do this for one site
terr <- terr_daily[which(terr_daily$site_id == "BLAN"), ]
terr_n <- nrow(terr)
View(terr)
# just do this for one site and one variable
terr <- terr_daily[which(terr_daily$site_id == "BLAN" &
terr_daily$variable == "le"), ]
terr_finite_prop <- sum(is.finite(terr$observation))/terr_n
is.finite(terr$observation)
count(is.finite(terr$observation)
)
sum(is.finite(terr$observation)
)
terr_n <- nrow(terr)
terr_finite_prop <- sum(is.finite(terr$observation)/terr_n
l
terr_finite_prop <- sum(is.finite(terr$observation))/terr_n
terr_finite_prop <- sum(is.finite(terr$observation))/terr_n
remotes::install_github("anthonynorth/rscodeio")
install.packages("remotes")
remotes::install_github("anthonynorth/rscodeio")
rscodeio::install_theme()
terr_finite_prop <- sum(is.finite(terr$observation))/terr_n
terr_zeros <- nrow(terr[which(terr$observation == 0),])
sum(terr$observation==0)
terr_ties_prop <- sum(terr$observation==0)/terr_n
terr_n_gaps <- sum(abs(diff(terr$datetime)) >= 2)
abs(diff(terr$datetime))
View(terr)
sum(abs(diff(terr$datetime)) >= 2)
diff(terr$datetime)
View(terr)
terr_daily <- readr::read_csv(
here::here("./data/efi-neon-data/terrestrial-daily.csv")
)
# just do this for one site and one variable
terr <- terr_daily[which(terr_daily$site_id == "BLAN" &
terr_daily$variable == "le"), ]
terr_n <- nrow(terr)
terr_finite_prop <- sum(is.finite(terr$observation))/terr_n
terr_zeros <- nrow(terr[which(terr$observation == 0),])
terr_ties_prop <- sum(terr$observation==0)/terr_n
terr_n_gaps <- sum(abs(diff(terr$datetime)) >= 2)
View(terr)
source(here::here("./src/R/functions_global.R"))
library(ggplot2)
terr
# for demonstration purposes, make a plot that shows the locations of missing
# observations along with the data
ggplot(data = terr) +
geom_point(aes(x = datetime, y = observation)) +
labs(x = "time", y = "le")
# for demonstration purposes, make a plot that shows the locations of missing
# observations along with the data
ggplot(data = terr) +
geom_point(aes(x = datetime, y = observation)) +
labs(x = "time", y = "le") +
theme_base()
# for demonstration purposes, make a plot that shows the locations of missing
# observations along with the data
terr_comp <- terr %>%
tidyr::complete(datetime)
library(magrittr)
# for demonstration purposes, make a plot that shows the locations of missing
# observations along with the data
terr_comp <- terr %>%
tidyr::complete(datetime)
# for demonstration purposes, make a plot that shows the locations of missing
# observations along with the data
terr_comp <- data.frame(
datetime = seq(as.Date(min(terr$datetime)), as.Date(max(terr$datetime)),
by = "days")
)
# for demonstration purposes, make a plot that shows the locations of missing
# observations along with the data
terr_comp <- data.frame(
datetime = seq(as.Date(min(terr$datetime)), as.Date(max(terr$datetime)),
by = "days")
) %>%
dplyr::left_join(
.,
y = terr,
by = "datetime"
)
ggplot() +
geom_point(data = terr,
aes(x = datetime, y = observation)) +
labs(x = "time", y = "le") +
theme_base()
ggplot() +
geom_point(data = terr_comp,
aes(x = datetime, y = observation)) +
labs(x = "time", y = "le") +
theme_base()
View(terr_comp)
ggplot() +
geom_point(data = terr_comp,
aes(x = datetime, y = observation)) +
labs(x = "time", y = "le") +
geom_col(data = terr_comp[which(is.na(terr_comp$observation)),],
aes = datetime, y = 200)
aes(x = datetime, y = 200)
ggplot() +
geom_point(data = terr_comp,
aes(x = datetime, y = observation)) +
labs(x = "time", y = "le") +
geom_col(data = terr_comp[which(is.na(terr_comp$observation)),],
aes(x = datetime, y = 200)) +
theme_base()
ggplot() +
geom_col(data = terr_comp[which(is.na(terr_comp$observation)),],
aes(x = datetime, y = 200)) +
geom_point(data = terr_comp,
aes(x = datetime, y = observation)) +
labs(x = "time", y = "le") +
theme_base()
ggplot() +
geom_col(data = terr_comp[which(is.na(terr_comp$observation)),],
aes(x = datetime, y = 200),
alpha = 0.2, colour = "lightblue") +
geom_point(data = terr_comp,
aes(x = datetime, y = observation)) +
labs(x = "time", y = "le") +
theme_base()
ggsave(
here::here("./figs/manually-generated/terr-daily-missing-obs-blan-le.png"),
missing_blan_le
)
missing_blan_le <- ggplot() +
geom_col(data = terr_comp[which(is.na(terr_comp$observation)),],
aes(x = datetime, y = 200),
alpha = 0.2, colour = "lightblue") +
geom_point(data = terr_comp,
aes(x = datetime, y = observation)) +
labs(x = "time", y = "le") +
theme_base()
ggsave(
here::here("./figs/manually-generated/terr-daily-missing-obs-blan-le.png"),
missing_blan_le
)
?zoo::rollmean
install.packages("zoo")
?zoo::rollmean
#' AUTHOR: Cole B. Brookson
#' DATE OF CREATION: 2023-12-06
#'
#' We need to look at some important characteristics of the timeseries before we
#' actually do the PE calculation:
#'
#' 1) number of observations
#' 2) proportion of zeros in the time-series
#' 3) proportion of ties in the time-series
#' 4) gaps
#'
#' As Pennekamp (2019) states, zero and tie proportions are calculated since
#' they can pose problems for rank-based PE
# set up =======================================================================
# going to go through the process once iwth one of the datasets, so for now I'll
# just ues terrestrial-daily, for no particular reason
terr_daily <- readr::read_csv(
here::here("./data/efi-neon-data/terrestrial-daily.csv")
)
source(here::here("./src/R/functions_global.R"))
library(ggplot2)
library(magrittr)
# just do this for one site and one variable
terr <- terr_daily[which(terr_daily$site_id == "BLAN" &
terr_daily$variable == "le"), ]
terr_n <- nrow(terr)
terr_finite_prop <- sum(is.finite(terr$observation))/terr_n
terr_zeros <- nrow(terr[which(terr$observation == 0),])
terr_ties_prop <- sum(terr$observation==0)/terr_n
terr_n_gaps <- sum(abs(diff(terr$datetime)) >= 2)
# for demonstration purposes, make a plot that shows the locations of missing
# observations along with the data
terr_comp <- data.frame(
datetime = seq(as.Date(min(terr$datetime)), as.Date(max(terr$datetime)),
by = "days")
) %>%
dplyr::left_join(
.,
y = terr,
by = "datetime"
)
# make the same plots for when we have rolling averages
terr_fill_options <- terr_comp %>%
dplyr::arrange(desc(datetime))
View(terr_fill_options)
# make the same plots for when we have rolling averages
terr_fill_options <- terr_comp %>%
dplyr::arrange(asc(datetime))
# make the same plots for when we have rolling averages
terr_fill_options <- terr_comp %>%
dplyr::arrange(datetime)
View(terr_fill_options)
# make the same plots for when we have rolling averages
terr_fill_options <- terr_comp %>%
dplyr::arrange(datetime) %>%
dplyr::mutate(
observation_2d = zoo::rollmean(observation, k = 2, fill = NA),
observation_3d = zoo::rollmean(observation, k = 3, fill = NA),
observation_5d = zoo::rollmean(observation, k = 5, fill = NA),
observation_7d = zoo::rollmean(observation, k = 7, fill = NA),
)
missing_blan_le_2d <- ggplot() +
geom_col(data = terr_fill_options[which(
is.na(terr_fill_options$observation)),],
aes(x = datetime, y = 200),
alpha = 0.2, colour = "lightblue") +
geom_point(data = terr_fill_options,
aes(x = datetime, y = observation_2d)) +
labs(x = "time", y = "le") +
theme_base()
missing_blan_le_2d
missing_blan_le <- ggplot() +
geom_col(data = terr_comp[which(is.na(terr_comp$observation)),],
aes(x = datetime, y = 200),
alpha = 0.2, colour = "lightblue") +
geom_point(data = terr_comp,
aes(x = datetime, y = observation)) +
labs(x = "time", y = "le") +
theme_base()
missing_blan_le
missing_blan_le_2d
terr_n_gaps
terr_gaps <- abs(diff(terr$datetime)) >= 2)
terr_gaps <- abs(diff(terr$datetime)) >= 2
abs(diff(terr$datetime))
terr_gaps <- abs(diff(terr$datetime))
terr_gaps
terr_gaps <- abs(diff(terr$datetime))[which(
abs(diff(terr$datetime)) >= 2
)]
terr_gaps
ggplot() +
geom_density(aes(x = terr_gaps))
make_groups <- function(df, grouping) {
col_name <- paste0("observation_",grouping,"d")
df$col_name <- rep(1:celing(nrow(df)/gropuing), each = grouping)[1:nrow(df)]
return(df)
}
make_groups <- function(df, grouping) {
# col_name <- paste0("grouping_",grouping,"d")
# df$col_name <-
rep(1:celing(nrow(df)/gropuing), each = grouping)[1:nrow(df)]
}
terr_fill_options <- terr_comp %>%
dplyr::arrange(datetime) %>%
dplyr::mutate(
grouping_2d = make_groups(., grouping = 2)
)
??ceiling
make_groups <- function(df, grouping) {
# col_name <- paste0("grouping_",grouping,"d")
# df$col_name <-
rep(1:ceiling(nrow(df)/gropuing), each = grouping)[1:nrow(df)]
}
terr_fill_options <- terr_comp %>%
dplyr::arrange(datetime) %>%
dplyr::mutate(
grouping_2d = make_groups(., grouping = 2)
)
2
grouping = 2
df = terr_comp
make_groups <- function(df, grouping) {
# col_name <- paste0("grouping_",grouping,"d")
# df$col_name <-
rep(1:ceiling(nrow(df)/gropuing), each = grouping)[1:nrow(df)]
}
terr_fill_options <- terr_comp %>%
dplyr::arrange(datetime) %>%
dplyr::mutate(
grouping_2d = make_groups(., grouping = 2)
)
rep(1:ceiling(nrow(df)/gropuing), each = grouping)[1:nrow(df)]
make_groups <- function(df, grouping) {
# col_name <- paste0("grouping_",grouping,"d")
# df$col_name <-
rep(1:ceiling(nrow(df)/grouping), each = grouping)[1:nrow(df)]
}
terr_fill_options <- terr_comp %>%
dplyr::arrange(datetime) %>%
dplyr::mutate(
grouping_2d = make_groups(., grouping = 2)
)
View(terr_comp)
rep(1:ceiling(nrow(df)/grouping), each = grouping)[1:nrow(df)]
make_groups <- function(df, grouping) {
col_name <- paste0("grouping_",grouping,"d")
df$col_name <- rep(1:ceiling(nrow(df)/grouping), each = grouping)[1:nrow(df)]
}
terr_fill_options <- make_groups(df = terr_comp, grouping = 2)
make_groups <- function(df, grouping) {
col_name <- paste0("grouping_",grouping,"d")
df$col_name <- rep(1:ceiling(nrow(df)/grouping), each = grouping)[1:nrow(df)]
df
}
terr_fill_options <- make_groups(df = terr_comp, grouping = 2)
make_groups <- function(df, groupings) {
for(i in groupings) {
col_name <- paste0("grouping_",grouping,"d")
df$col_name <- rep(1:ceiling(nrow(df)/grouping), each = grouping)[1:nrow(df)]
}
df
}
make_groups <- function(df, groupings) {
for(i in groupings) {
col_name <- paste0("grouping_",i,"d")
df$col_name <- rep(1:ceiling(nrow(df)/i), each = i)[1:nrow(df)]
}
df
}
terr_fill_options <- make_groups(df = terr_comp, groupings = c(2, 3, 5, 7))
View(terr_fill_options)
make_groups <- function(df, groupings) {
for(i in groupings) {
col_name <- paste0("grouping_",i,"d")
df$`col_name` <- rep(1:ceiling(nrow(df)/i), each = i)[1:nrow(df)]
}
df
}
terr_fill_options <- make_groups(df = terr_comp, groupings = c(2, 3, 5, 7))
df$`paste0("grouping_",i,"d")` <-
rep(1:ceiling(nrow(df)/i), each = i)[1:nrow(df)]
make_groups <- function(df, groupings) {
for(i in groupings) {
col_name <- paste0("grouping_",i,"d")
df[, vars(col_name)] <- rep(1:ceiling(nrow(df)/i), each = i)[1:nrow(df)]
}
df
}
terr_fill_options <- make_groups(df = terr_comp, groupings = c(2, 3, 5, 7))
groupings = c(2, 3, 5, 7)
for(i in groupings) {print(i)}
i = groupings[1]
col_name <- paste0("grouping_",i,"d")
col_name
?vars
make_groups <- function(df, groupings) {
for(i in groupings) {
col_name <- paste0("grouping_",i,"d")
df[, dplyr::vars(col_name)] <-
rep(1:ceiling(nrow(df)/i), each = i)[1:nrow(df)]
}
df
}
terr_fill_options <- make_groups(df = terr_comp, groupings = c(2, 3, 5, 7))
make_groups <- function(df, groupings) {
for(i in groupings) {
col_name <- paste0("grouping_",i,"d")
df[, col_name] <-
rep(1:ceiling(nrow(df)/i), each = i)[1:nrow(df)]
}
df
}
terr_fill_options <- make_groups(df = terr_comp, groupings = c(2, 3, 5, 7))
mean(terr_fill_options$datetime[1:10])
mean(terr_fill_options$datetime[1:14])
mean(terr_fill_options$datetime[1:17])
x <- c(NA, NA, NA)
mean(x)
terr_fill_options %>%
dplyr::group_by(grouping_2d) %>%
dplyr::summarize(
mean_datetime <- mean(datetime),
mean_obs <- mean(observation, na.rm = TRUE)
)
terr_fill_options %>%
dplyr::group_by(grouping_2d) %>%
dplyr::summarize(
mean_datetime = mean(datetime),
mean_obs = mean(observation, na.rm = TRUE)
)
terr_2d <- terr_fill_options %>%
dplyr::group_by(grouping_2d) %>%
dplyr::summarize(
mean_datetime = mean(datetime),
mean_obs = mean(observation, na.rm = TRUE)
)
missing_blan_le_2d <- ggplot() +
geom_col(data = terr_2d[which(is.na(terr_2d$mean_obs)),],
aes(x = datetime, y = 200),
alpha = 0.2, colour = "lightblue") +
geom_point(data = terr_2d,
aes(x = datetime, y = mean_obs)) +
labs(x = "time", y = "le") +
theme_base()
missing_blan_le_2d
missing_blan_le_2d <- ggplot() +
geom_col(data = terr_2d[which(is.na(terr_2d$mean_obs)),],
aes(x = mean_datetime, y = 200),
alpha = 0.2, colour = "lightblue") +
geom_point(data = terr_2d,
aes(x = mean_datetime, y = mean_obs)) +
labs(x = "time", y = "le") +
theme_base()
missing_blan_le_2d
missing_blan_le_2d <- ggplot() +
geom_col(data = terr_2d[which(is.na(terr_2d$mean_obs)),],
aes(x = mean_datetime, y = 200),
alpha = 0.2, colour = "lightblue") +
geom_point(data = terr_2d,
aes(x = mean_datetime, y = mean_obs)) +
labs(x = "time", y = "le", main = "two-day average") +
theme_base()
missing_blan_le_2d
missing_blan_le_2d <- ggplot() +
geom_col(data = terr_2d[which(is.na(terr_2d$mean_obs)),],
aes(x = mean_datetime, y = 200),
alpha = 0.2, colour = "lightblue") +
geom_point(data = terr_2d,
aes(x = mean_datetime, y = mean_obs)) +
labs(x = "time", y = "le", title = "two-day average") +
theme_base()
missing_blan_le_2d
ggsave(
here::here(paste0("./figs/manually-generated/",
"terr-daily-missing-obs-blan-le-2d-avg.png")),
missing_blan_le_2d
)
terr_3d <- terr_fill_options %>%
dplyr::group_by(grouping_3d) %>%
dplyr::summarize(
mean_datetime = mean(datetime),
mean_obs = mean(observation, na.rm = TRUE)
)
missing_blan_le_3d <- ggplot() +
geom_col(data = terr_3d[which(is.na(terr_3d$mean_obs)),],
aes(x = mean_datetime, y = 200),
alpha = 0.2, colour = "lightblue") +
geom_point(data = terr_3d,
aes(x = mean_datetime, y = mean_obs)) +
labs(x = "time", y = "le", title = "two-day average") +
theme_base()
missing_blan_le_3d
missing_blan_le_2d <- ggplot() +
geom_col(data = terr_2d[which(is.na(terr_2d$mean_obs)),],
aes(x = mean_datetime, y = 200),
alpha = 0.2, colour = "lightblue") +
geom_point(data = terr_2d,
aes(x = mean_datetime, y = mean_obs)) +
labs(x = "time", y = "le", title = "2-day average") +
theme_base()
ggsave(
here::here(paste0("./figs/manually-generated/",
"terr-daily-missing-obs-blan-le-2d-avg.png")),
missing_blan_le_2d
)
terr_3d <- terr_fill_options %>%
dplyr::group_by(grouping_3d) %>%
dplyr::summarize(
mean_datetime = mean(datetime),
mean_obs = mean(observation, na.rm = TRUE)
)
missing_blan_le_3d <- ggplot() +
geom_col(data = terr_3d[which(is.na(terr_3d$mean_obs)),],
aes(x = mean_datetime, y = 200),
alpha = 0.2, colour = "lightblue") +
geom_point(data = terr_3d,
aes(x = mean_datetime, y = mean_obs)) +
labs(x = "time", y = "le", title = "3-day average") +
theme_base()
missing_blan_le_3d
ggsave(
here::here(paste0("./figs/manually-generated/",
"terr-daily-missing-obs-blan-le-3d-avg.png")),
missing_blan_le_3d
)
terr_5d <- terr_fill_options %>%
dplyr::group_by(grouping_5d) %>%
dplyr::summarize(
mean_datetime = mean(datetime),
mean_obs = mean(observation, na.rm = TRUE)
)
missing_blan_le_5d <- ggplot() +
geom_col(data = terr_5d[which(is.na(terr_5d$mean_obs)),],
aes(x = mean_datetime, y = 200),
alpha = 0.2, colour = "lightblue") +
geom_point(data = terr_5d,
aes(x = mean_datetime, y = mean_obs)) +
labs(x = "time", y = "le", title = "5-day average") +
theme_base()
missing_blan_le_5d
ggsave(
here::here(paste0("./figs/manually-generated/",
"terr-daily-missing-obs-blan-le-5d-avg.png")),
missing_blan_le_5d
)
terr_7d <- terr_fill_options %>%
dplyr::group_by(grouping_7d) %>%
dplyr::summarize(
mean_datetime = mean(datetime),
mean_obs = mean(observation, na.rm = TRUE)
)
missing_blan_le_7d <- ggplot() +
geom_col(data = terr_7d[which(is.na(terr_7d$mean_obs)),],
aes(x = mean_datetime, y = 200),
alpha = 0.2, colour = "lightblue") +
geom_point(data = terr_7d,
aes(x = mean_datetime, y = mean_obs)) +
labs(x = "time", y = "le", title = "7-day average") +
theme_base()
missing_blan_le_7d
ggsave(
here::here(paste0("./figs/manually-generated/",
"terr-daily-missing-obs-blan-le-7d-avg.png")),
missing_blan_le_7d
)
