for(site in unique(data_ob$site_id)) {
data_site <- data_ob[which(data_ob$site_id == site), ]
# site by site plot
data_site_plot <- ggplot2::ggplot(data = data_site) +
ggplot2::geom_line(ggplot2::aes(x = datetime, y = observation)) +
ggplot2::geom_point(ggplot2::aes(x = datetime, y = observation),
size = 2, fill = "red3", shape = 21) +
theme_base() +
ggplot2::labs(y = ob_type, x = "Time")
ggsave(paste0(
here::here("./figs/neon-data-timeseries/", subfolder, "/"),
datatype, ob_type, "-", site, ".png"),
data_site_plot)
obs<-data_site$observation[which(data_site$variable == ob_type)]
all_sites_pacf[[site_num]] <- pacf(obs, pl = FALSE)$acf[1:18]
all_sites_pacf_ci[[site_num]] <- get_clim(pacf(obs, pl = FALSE))
all_sites_acf[[site_num]] <- acf(obs, pl = FALSE)$acf[1:18]
all_sites_acf_ci[[site_num]] <- get_clim(acf(obs, pl = FALSE))
#plot the outputs
autocorr_plot(obs = obs, data_name = ob_type, site = site,
sub_folder = subfolder)
}
# iterate and plot the outputs
site_num <- site_num + 1
# now take the averages and plot those
mean_pacf <- colMeans(do.call(rbind, all_sites_pacf), na.rm = TRUE)
ci <- 1.96*std_err(mean_pacf)
lags <- c(1:18)
# plot the partial averages
png(
paste0(
here::here(
"./figs/neon-autocorrelation-plots/mean-autocorrelation/"),
"pacf-mean-", datatype, "-", ob_type , ".png"))
plot(x = lags, y = mean_pacf, type = "h",
ylim = c(-(max(mean_pacf)+0.5*max(mean_pacf)),
(max(mean_pacf)+0.5*max(mean_pacf))),
xlab = "Lags", ylab = "Mean PACF")
abline(h = 0, col = "grey80", lty = 2)
abline(h = ci, col = "red2", lty = 2)
abline(h = -ci, col = "red2", lty = 2)
dev.off()
# plot the regular averages
png(
paste0(
here::here(
"./figs/neon-autocorrelation-plots/mean-autocorrelation/"),
"acf-mean-", datatype, "-", ob_type, ".png"))
mean_acf <- colMeans(do.call(rbind, all_sites_acf), na.rm = TRUE)
ci <- 1.96*std_err(mean_acf)
lags <- c(1:18)
plot(x = lags, y = mean_acf, type = "h",
ylim = c(-(max(mean_acf)+0.5*max(mean_acf)),
(max(mean_acf)+0.5*max(mean_acf))),
xlab = "Lags", ylab = "Mean PACF")
abline(h = 0, col = "grey80", lty = 2)
abline(h = ci, col = "red2", lty = 2)
abline(h = -ci, col = "red2", lty = 2)
dev.off()
}
obs
data_site
min_date = min(data_site[which(!is.na(data_site$observation)), "datetime"])
data_site[which(!is.na(data_site$observation)), "datetime"]
min(data_site[which(!is.na(data_site$observation)), "datetime"])
site
tar_make()
data = get_data_csv(
here::here("./data/efi-neon-data/beetles.csv"))
subfolder = "beetles-by-site"
datatype = "beetles"
unique(data$variable)
ob_type = "abundance"
data_ob <- data[
which(data$variable == ob_type),
]
all_sites_pacf <- vector(mode = "list", length =
length(unique(data_ob$site_id)))
all_sites_acf <- vector(mode = "list", length =
length(unique(data_ob$site_id)))
all_sites_pacf_ci <- vector(mode = "list", length =
length(unique(data_ob$site_id)))
all_sites_acf_ci <- vector(mode = "list", length =
length(unique(data_ob$site_id)))
site_num <- 1
unique(data_ob$site_id)
site = "ABBY"
data_site <- data_ob[which(data_ob$site_id == site &
!is.na(data_ob$observation)), ]
# site by site plot
data_site_plot <- ggplot2::ggplot(data = data_site) +
ggplot2::geom_line(ggplot2::aes(x = datetime, y = observation)) +
ggplot2::geom_point(ggplot2::aes(x = datetime, y = observation),
size = 2, fill = "red3", shape = 21) +
theme_base() +
ggplot2::labs(y = ob_type, x = "Time")
data_site_plot
# use some vectors to store the calculations across all sites so we can get
# an average across all sites
for(ob_type in unique(data$variable)) {
data_ob <- data[
which(data$variable == ob_type),
]
all_sites_pacf <- vector(mode = "list", length =
length(unique(data_ob$site_id)))
all_sites_acf <- vector(mode = "list", length =
length(unique(data_ob$site_id)))
all_sites_pacf_ci <- vector(mode = "list", length =
length(unique(data_ob$site_id)))
all_sites_acf_ci <- vector(mode = "list", length =
length(unique(data_ob$site_id)))
site_num <- 1
# go through each site and get the values then plot them
for(site in unique(data_ob$site_id)) {
data_site <- data_ob[which(data_ob$site_id == site &
!is.na(data_ob$observation)), ]
# site by site plot
data_site_plot <- ggplot2::ggplot(data = data_site) +
ggplot2::geom_line(ggplot2::aes(x = datetime, y = observation)) +
ggplot2::geom_point(ggplot2::aes(x = datetime, y = observation),
size = 2, fill = "red3", shape = 21) +
theme_base() +
ggplot2::labs(y = ob_type, x = "Time")
ggsave(paste0(
here::here("./figs/neon-data-timeseries/", subfolder, "/"),
datatype, ob_type, "-", site, ".png"),
data_site_plot)
obs<-data_site$observation[which(data_site$variable == ob_type)]
all_sites_pacf[[site_num]] <- pacf(obs, pl = FALSE)$acf[1:18]
all_sites_pacf_ci[[site_num]] <- get_clim(pacf(obs, pl = FALSE))
all_sites_acf[[site_num]] <- acf(obs, pl = FALSE)$acf[1:18]
all_sites_acf_ci[[site_num]] <- get_clim(acf(obs, pl = FALSE))
#plot the outputs
autocorr_plot(obs = obs, data_name = ob_type, site = site,
sub_folder = subfolder)
}
# iterate and plot the outputs
site_num <- site_num + 1
# now take the averages and plot those
mean_pacf <- colMeans(do.call(rbind, all_sites_pacf), na.rm = TRUE)
ci <- 1.96*std_err(mean_pacf)
lags <- c(1:18)
# plot the partial averages
png(
paste0(
here::here(
"./figs/neon-autocorrelation-plots/mean-autocorrelation/"),
"pacf-mean-", datatype, "-", ob_type , ".png"))
plot(x = lags, y = mean_pacf, type = "h",
ylim = c(-(max(mean_pacf)+0.5*max(mean_pacf)),
(max(mean_pacf)+0.5*max(mean_pacf))),
xlab = "Lags", ylab = "Mean PACF")
abline(h = 0, col = "grey80", lty = 2)
abline(h = ci, col = "red2", lty = 2)
abline(h = -ci, col = "red2", lty = 2)
dev.off()
# plot the regular averages
png(
paste0(
here::here(
"./figs/neon-autocorrelation-plots/mean-autocorrelation/"),
"acf-mean-", datatype, "-", ob_type, ".png"))
mean_acf <- colMeans(do.call(rbind, all_sites_acf), na.rm = TRUE)
ci <- 1.96*std_err(mean_acf)
lags <- c(1:18)
plot(x = lags, y = mean_acf, type = "h",
ylim = c(-(max(mean_acf)+0.5*max(mean_acf)),
(max(mean_acf)+0.5*max(mean_acf))),
xlab = "Lags", ylab = "Mean PACF")
abline(h = 0, col = "grey80", lty = 2)
abline(h = ci, col = "red2", lty = 2)
abline(h = -ci, col = "red2", lty = 2)
dev.off()
}
dev.list()
dev.off()
# use some vectors to store the calculations across all sites so we can get
# an average across all sites
for(ob_type in unique(data$variable)) {
data_ob <- data[
which(data$variable == ob_type),
]
all_sites_pacf <- vector(mode = "list", length =
length(unique(data_ob$site_id)))
all_sites_acf <- vector(mode = "list", length =
length(unique(data_ob$site_id)))
all_sites_pacf_ci <- vector(mode = "list", length =
length(unique(data_ob$site_id)))
all_sites_acf_ci <- vector(mode = "list", length =
length(unique(data_ob$site_id)))
site_num <- 1
# go through each site and get the values then plot them
for(site in unique(data_ob$site_id)) {
data_site <- data_ob[which(data_ob$site_id == site &
!is.na(data_ob$observation)), ]
# site by site plot
data_site_plot <- ggplot2::ggplot(data = data_site) +
ggplot2::geom_line(ggplot2::aes(x = datetime, y = observation)) +
ggplot2::geom_point(ggplot2::aes(x = datetime, y = observation),
size = 2, fill = "red3", shape = 21) +
theme_base() +
ggplot2::labs(y = ob_type, x = "Time")
ggsave(paste0(
here::here("./figs/neon-data-timeseries/", subfolder, "/"),
datatype, ob_type, "-", site, ".png"),
data_site_plot)
obs<-data_site$observation[which(data_site$variable == ob_type)]
all_sites_pacf[[site_num]] <- pacf(obs, pl = FALSE)$acf[1:18]
all_sites_pacf_ci[[site_num]] <- get_clim(pacf(obs, pl = FALSE))
all_sites_acf[[site_num]] <- acf(obs, pl = FALSE)$acf[1:18]
all_sites_acf_ci[[site_num]] <- get_clim(acf(obs, pl = FALSE))
#plot the outputs
autocorr_plot(obs = obs, data_name = ob_type, site = site,
sub_folder = subfolder)
}
# iterate and plot the outputs
site_num <- site_num + 1
# now take the averages and plot those
mean_pacf <- colMeans(do.call(rbind, all_sites_pacf), na.rm = TRUE)
ci <- 1.96*std_err(mean_pacf)
lags <- c(1:18)
# plot the partial averages
png(
paste0(
here::here(
"./figs/neon-autocorrelation-plots/mean-autocorrelation/"),
"pacf-mean-", datatype, "-", ob_type , ".png"))
plot(x = lags, y = mean_pacf, type = "h",
ylim = c(-(max(mean_pacf)+0.5*max(mean_pacf)),
(max(mean_pacf)+0.5*max(mean_pacf))),
xlab = "Lags", ylab = "Mean PACF")
abline(h = 0, col = "grey80", lty = 2)
abline(h = ci, col = "red2", lty = 2)
abline(h = -ci, col = "red2", lty = 2)
dev.off()
# plot the regular averages
png(
paste0(
here::here(
"./figs/neon-autocorrelation-plots/mean-autocorrelation/"),
"acf-mean-", datatype, "-", ob_type, ".png"))
mean_acf <- colMeans(do.call(rbind, all_sites_acf), na.rm = TRUE)
ci <- 1.96*std_err(mean_acf)
lags <- c(1:18)
plot(x = lags, y = mean_acf, type = "h",
ylim = c(-(max(mean_acf)+0.5*max(mean_acf)),
(max(mean_acf)+0.5*max(mean_acf))),
xlab = "Lags", ylab = "Mean PACF")
abline(h = 0, col = "grey80", lty = 2)
abline(h = ci, col = "red2", lty = 2)
abline(h = -ci, col = "red2", lty = 2)
dev.off()
}
data_site_plot
# site by site plot
data_site_plot <- ggplot2::ggplot(data = data_site) +
ggplot2::geom_line(ggplot2::aes(x = datetime, y = observation)) +
ggplot2::geom_point(ggplot2::aes(x = datetime, y = observation),
size = 2, fill = "red3", shape = 21) +
theme_base() +
ggplot2::labs(y = ob_type, x = "Time")
data_site_plot
data_site <- data_ob[which(data_ob$site_id == site &
!is.na(data_ob$observation)), ]
data_site
# site by site plot
data_site_plot <- ggplot2::ggplot(data = data_site) +
ggplot2::geom_line(ggplot2::aes(x = datetime, y = observation)) +
ggplot2::geom_point(ggplot2::aes(x = datetime, y = observation),
size = 2, fill = "red3", shape = 21) +
theme_base() +
ggplot2::labs(y = ob_type, x = "Time")
data_site_plot
ggplot2::ggplot(data = data_site) +
ggplot2::geom_line(ggplot2::aes(x = datetime, y = observation)) +
ggplot2::geom_point(ggplot2::aes(x = datetime, y = observation),
size = 2, fill = "red3", shape = 21) +
theme_base() +
ggplot2::labs(y = ob_type, x = "Time")
obs<-data_site$observation[which(data_site$variable == ob_type)]
all_sites_pacf[[site_num]] <- pacf(obs, pl = FALSE)$acf[1:18]
all_sites_pacf_ci[[site_num]] <- get_clim(pacf(obs, pl = FALSE))
all_sites_acf[[site_num]] <- acf(obs, pl = FALSE)$acf[1:18]
all_sites_acf_ci[[site_num]] <- get_clim(acf(obs, pl = FALSE))
#plot the outputs
autocorr_plot(obs = obs, data_name = ob_type, site = site,
sub_folder = subfolder)
acf(obs,pl=TRUE)
pacf(obs,pl=TRUE)
dev.list()
# site by site plot
data_site_plot <- ggplot2::ggplot(data = data_site) +
ggplot2::geom_line(ggplot2::aes(x = datetime, y = observation)) +
ggplot2::geom_point(ggplot2::aes(x = datetime, y = observation),
size = 2, fill = "red3", shape = 21) +
theme_base() +
ggplot2::labs(y = ob_type, x = "Time")
data_site_plot
ggsave(paste0(
here::here("./figs/neon-data-timeseries/", subfolder, "/"),
datatype, ob_type, "-", site, ".png"),
data_site_plot)
obs<-data_site$observation[which(data_site$variable == ob_type)]
all_sites_pacf[[site_num]] <- pacf(obs, pl = FALSE)$acf[1:18]
all_sites_pacf_ci[[site_num]] <- get_clim(pacf(obs, pl = FALSE))
all_sites_acf[[site_num]] <- acf(obs, pl = FALSE)$acf[1:18]
all_sites_acf_ci[[site_num]] <- get_clim(acf(obs, pl = FALSE))
#plot the outputs
autocorr_plot(obs = obs, data_name = ob_type, site = site,
sub_folder = subfolder)
obs = obs
data_name = ob_type
site = site
sub_folder = subfolder
acf(obs,pl=TRUE)
pacf(obs,pl=TRUE)
tar_visnetwork()
tar_make()
# use some vectors to store the calculations across all sites so we can get
# an average across all sites
for(ob_type in unique(data$variable)) {
data_ob <- data[
which(data$variable == ob_type),
]
all_sites_pacf <- vector(mode = "list", length =
length(unique(data_ob$site_id)))
all_sites_acf <- vector(mode = "list", length =
length(unique(data_ob$site_id)))
all_sites_pacf_ci <- vector(mode = "list", length =
length(unique(data_ob$site_id)))
all_sites_acf_ci <- vector(mode = "list", length =
length(unique(data_ob$site_id)))
site_num <- 1
# go through each site and get the values then plot them
for(site in unique(data_ob$site_id)) {
data_site <- data_ob[which(data_ob$site_id == site &
!is.na(data_ob$observation)), ]
# site by site plot
data_site_plot <- ggplot2::ggplot(data = data_site) +
ggplot2::geom_line(ggplot2::aes(x = datetime, y = observation)) +
ggplot2::geom_point(ggplot2::aes(x = datetime, y = observation),
size = 2, fill = "red3", shape = 21) +
theme_base() +
ggplot2::labs(y = ob_type, x = "Time")
ggsave(paste0(
here::here("./figs/neon-data-timeseries/", subfolder, "/"),
datatype, ob_type, "-", site, ".png"),
data_site_plot)
obs<-data_site$observation[which(data_site$variable == ob_type)]
all_sites_pacf[[site_num]] <- pacf(obs, pl = FALSE)$acf[1:18]
all_sites_pacf_ci[[site_num]] <- get_clim(pacf(obs, pl = FALSE))
all_sites_acf[[site_num]] <- acf(obs, pl = FALSE)$acf[1:18]
all_sites_acf_ci[[site_num]] <- get_clim(acf(obs, pl = FALSE))
#plot the outputs
autocorr_plot(obs = obs, data_name = ob_type, site = site,
sub_folder = subfolder)
}
# iterate and plot the outputs
site_num <- site_num + 1
# now take the averages and plot those
mean_pacf <- colMeans(do.call(rbind, all_sites_pacf), na.rm = TRUE)
ci <- 1.96*std_err(mean_pacf)
lags <- c(1:18)
# plot the partial averages
png(
paste0(
here::here(
"./figs/neon-autocorrelation-plots/mean-autocorrelation/"),
"pacf-mean-", datatype, "-", ob_type , ".png"))
plot(x = lags, y = mean_pacf, type = "h",
ylim = c(-(max(mean_pacf)+0.5*max(mean_pacf)),
(max(mean_pacf)+0.5*max(mean_pacf))),
xlab = "Lags", ylab = "Mean PACF")
abline(h = 0, col = "grey80", lty = 2)
abline(h = ci, col = "red2", lty = 2)
abline(h = -ci, col = "red2", lty = 2)
dev.off()
# plot the regular averages
png(
paste0(
here::here(
"./figs/neon-autocorrelation-plots/mean-autocorrelation/"),
"acf-mean-", datatype, "-", ob_type, ".png"))
mean_acf <- colMeans(do.call(rbind, all_sites_acf), na.rm = TRUE)
ci <- 1.96*std_err(mean_acf)
lags <- c(1:18)
plot(x = lags, y = mean_acf, type = "h",
ylim = c(-(max(mean_acf)+0.5*max(mean_acf)),
(max(mean_acf)+0.5*max(mean_acf))),
xlab = "Lags", ylab = "Mean PACF")
abline(h = 0, col = "grey80", lty = 2)
abline(h = ci, col = "red2", lty = 2)
abline(h = -ci, col = "red2", lty = 2)
dev.off()
}
dev.off()
# use some vectors to store the calculations across all sites so we can get
# an average across all sites
for(ob_type in unique(data$variable)) {
data_ob <- data[
which(data$variable == ob_type),
]
all_sites_pacf <- vector(mode = "list", length =
length(unique(data_ob$site_id)))
all_sites_acf <- vector(mode = "list", length =
length(unique(data_ob$site_id)))
all_sites_pacf_ci <- vector(mode = "list", length =
length(unique(data_ob$site_id)))
all_sites_acf_ci <- vector(mode = "list", length =
length(unique(data_ob$site_id)))
site_num <- 1
# go through each site and get the values then plot them
for(site in unique(data_ob$site_id)) {
data_site <- data_ob[which(data_ob$site_id == site &
!is.na(data_ob$observation)), ]
# site by site plot
data_site_plot <- ggplot2::ggplot(data = data_site) +
ggplot2::geom_line(ggplot2::aes(x = datetime, y = observation)) +
ggplot2::geom_point(ggplot2::aes(x = datetime, y = observation),
size = 2, fill = "red3", shape = 21) +
theme_base() +
ggplot2::labs(y = ob_type, x = "Time")
ggsave(paste0(
here::here("./figs/neon-data-timeseries/", subfolder, "/"),
datatype, ob_type, "-", site, ".png"),
data_site_plot)
obs<-data_site$observation[which(data_site$variable == ob_type)]
all_sites_pacf[[site_num]] <- pacf(obs, pl = FALSE)$acf[1:18]
all_sites_pacf_ci[[site_num]] <- get_clim(pacf(obs, pl = FALSE))
all_sites_acf[[site_num]] <- acf(obs, pl = FALSE)$acf[1:18]
all_sites_acf_ci[[site_num]] <- get_clim(acf(obs, pl = FALSE))
#plot the outputs
autocorr_plot(obs = obs, data_name = ob_type, site = site,
sub_folder = subfolder)
}
# iterate and plot the outputs
site_num <- site_num + 1
# now take the averages and plot those
mean_pacf <- colMeans(do.call(rbind, all_sites_pacf), na.rm = TRUE)
ci <- 1.96*std_err(mean_pacf)
lags <- c(1:18)
# plot the partial averages
png(
paste0(
here::here(
"./figs/neon-autocorrelation-plots/mean-autocorrelation/"),
"pacf-mean-", datatype, "-", ob_type , ".png"))
plot(x = lags, y = mean_pacf, type = "h",
ylim = c(-(max(mean_pacf)+0.5*max(mean_pacf)),
(max(mean_pacf)+0.5*max(mean_pacf))),
xlab = "Lags", ylab = "Mean PACF")
abline(h = 0, col = "grey80", lty = 2)
abline(h = ci, col = "red2", lty = 2)
abline(h = -ci, col = "red2", lty = 2)
dev.off()
# plot the regular averages
png(
paste0(
here::here(
"./figs/neon-autocorrelation-plots/mean-autocorrelation/"),
"acf-mean-", datatype, "-", ob_type, ".png"))
mean_acf <- colMeans(do.call(rbind, all_sites_acf), na.rm = TRUE)
ci <- 1.96*std_err(mean_acf)
lags <- c(1:18)
plot(x = lags, y = mean_acf, type = "h",
ylim = c(-(max(mean_acf)+0.5*max(mean_acf)),
(max(mean_acf)+0.5*max(mean_acf))),
xlab = "Lags", ylab = "Mean PACF")
abline(h = 0, col = "grey80", lty = 2)
abline(h = ci, col = "red2", lty = 2)
abline(h = -ci, col = "red2", lty = 2)
dev.off()
}
ci
lags
plot(x = lags, y = mean_acf, type = "h",
ylim = c(-(max(mean_acf)+0.5*max(mean_acf)),
(max(mean_acf)+0.5*max(mean_acf))),
xlab = "Lags", ylab = "Mean PACF")
mean_acf <- colMeans(do.call(rbind, all_sites_acf), na.rm = TRUE)
ci <- 1.96*std_err(mean_acf)
lags <- c(1:18)
plot(x = lags, y = mean_acf, type = "h",
ylim = c(-(max(mean_acf)+0.5*max(mean_acf)),
(max(mean_acf)+0.5*max(mean_acf))),
xlab = "Lags", ylab = "Mean PACF")
c(-(max(mean_acf)+0.5*max(mean_acf)),
(max(mean_acf)+0.5*max(mean_acf)))
max(mean_acf)
mean_acf
plot(x = lags, y = mean_acf, type = "h",
ylim = c(-(max(mean_acf, na.rm = TRUE) +
0.5 * max(mean_acf, na.rm = TRUE)),
(max(mean_acf, na.rm = TRUE) +
0.5 * max(mean_acf, na.rm = TRUE))),
xlab = "Lags", ylab = "Mean PACF")
abline(h = 0, col = "grey80", lty = 2)
abline(h = ci, col = "red2", lty = 2)
abline(h = -ci, col = "red2", lty = 2)
dev.off()
plot(x = lags, y = mean_acf, type = "h",
ylim = c(-(max(mean_acf, na.rm = TRUE) +
0.5 * max(mean_acf, na.rm = TRUE)),
(max(mean_acf, na.rm = TRUE) +
0.5 * max(mean_acf, na.rm = TRUE))),
xlab = "Lags", ylab = "Mean PACF")
abline(h = 0, col = "grey80", lty = 2)
abline(h = ci, col = "red2", lty = 2)
abline(h = -ci, col = "red2", lty = 2)
tar_make()
tar_make()
tar_make()
